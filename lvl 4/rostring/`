#include <stdlib.h>
#include <unistd.h>

void	ft_putchar(char c)
{
	write(1, &c, 1);
}

int	ft_strlen(char *str)
{
	int i;
	
	i = 0;
	while (str[i])
		i++;
	return (i);
}

void	rostring(char *str)
{
	int	i;
	int	x;
	int	y;
	int	mark;
	char	*dst;
//	char	*tmp;

	i = 0;
	x = 0;
	y = 0;
	mark = 0;
	dst = malloc(sizeof(char) * ft_strlen(str) + 1);
	while (str[i])
	{
/*		while (str[i] != ' ' && str[i] != '\t' && str[i] != '\0'&& mark == 0)
			i++;
		if (mark == 0)
		{
			tmp = malloc(sizeof(char) * i);
			i = 0;
		}
		while (str[i] != ' ' && str[i] != '\t' && str[i] != '\0' && mark == 0)
		{
			tmp[y++] = str[i++];
			mark = 1;
		}
		tmp[y] = '\0';*/
		//ft_putchar(str[i]);
		if (str[i] != ' ' && str[i] != '\t' && str[i] != '\0')
		{
			ft_putchar('B');
			dst[x++] = str[i++];
		}
		i++;
	}
	dst[x] = '\0';
/*	y = 0;
	while (tmp[y])
		dst[x++] = tmp[y++];
	dst[x] = '\0';*/
	x = 0;
	while (dst[x])
		ft_putchar(dst[x++]);
//	free(tmp);
}

int	main(int ac, char **av)
{
	if (ac < 2)
		ft_putchar('\n');
	else
	{
		rostring(av[1]);
		ft_putchar('\n');
	}
	return (0);
}			
